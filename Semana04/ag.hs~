import Data.Tree
data AG = Ar [AG] | H Int deriving Show

data AGN = A Int [AGN] | Ho Int deriving Show  

eje1 = H 1
eje2 = Ar [H 2, H 3]
eje3 = Ar [H 2, Ar [H 3, H 4],
     Ar [H 7, Ar [H 8, H 9, H 10]]]

--- Catamorfismo

contarHojas (H n) = 1 
contarHojas (Ar ls) = sum (map contarHojas ls)

sumaHojas (H n) = n 
sumaHojas (Ar ls) = sum (map sumaHojas ls)

mulHojas (H n) = n 
mulHojas (Ar ls) = product (map mulHojas ls)

maximoAg (H n) = n
maximoAg (Ar ls) = maxList (map maximoAg ls) 


alturaAg (H n) = n
alturaAg (Ar ls) = maxList (map alturaAg ls) 

maxList [] = (-1000) 
maxList [a] =  a
maxList (a:b:ls) = max (max a b) (maxList (b:ls))

--  map contarHojas ..(
--     *Ar
--   /  |  \
-- 2   *Ar    *Ar
--     / \    / \
--     3 4    7  * Ar
--              / | \ 
--              8 9 10)

--     A 1
--   /  |  \
-- 2   A 2   A 4
--     / \    / \
--     3 4    7  A 3
--              / | \ 
--              8 9 10 	     
-- 

--  2
-- | \ \
-- 2 3 4
